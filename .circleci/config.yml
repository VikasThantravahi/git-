# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

commands:
  test:
    steps:
       - run: echo "yes"
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  say-hello:
    environment:
      PIPELINE_NUMBER: << pipeline.number >>
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      # Specify the version you desire here
      # See: https://circleci.com/developer/images/image/cimg/base
      - image: cimg/base:current
    shell: /bin/bash --login
    # Add steps to the job
    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!" 
      - run:
          name: print env
          command: |
            echo $PIPELINE_NUMBER
            echo "Hello, world" >  build$PIPELINE_NUMBER
            echo "Hi" > Hi.txt
            ls -lart
            
      - save_cache:
          paths:
            - Hi.txt
          key:   v1-my-cache-{{ .BuildNum }}-{{ checksum "Hi.txt" }}
      

      - run:
          name: Install dependencies
          command: |
            if [ -f "Jenkinsfile" ]; then
              echo "Cache restored, skipping yarn install."
              exit_code=1
            else
              echo "Cache not found, running yarn install."
              touch yarn_install
              echo "export CACHE_NOT_RESTORED=true" >> $BASH_ENV
              echo "test" > test.txt
              ls -la
              pwd
              exit_code=2
            fi
      # Save cache for future builds
      - save_cache:
          key: my-key
          paths:
            - /home/circleci/project/yarn_install
          pre-steps:
            - run:
                command: |
                  if [ -f "test.txt" ]; then
                    echo "doing pre-verify"
                  fi
      - run:
          name: "Hi Anudeep"
          command: "echo Hello, World!"
  say-bye: 
     environment:
       PIPELINE_NUMBER: << pipeline.number >>  
     docker:
      # Specify the version you desire here
      # See: https://circleci.com/developer/images/image/cimg/base
       - image: cimg/base:current

    # Add steps to the job
    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
     steps:
      # Checkout the code as the first step.
       - checkout
       - restore_cache:
           key: v1-my-cache-{{ .BuildNum }}-{{ checksum "Hi.txt" }}
       - run:
           name: "Say hello"
           command: |
              echo "Hello, World!"
              ls -lart    
       - run:
           name: "Test restore"
           command: |
             ls -la
             pwd

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    when:
      or:
        - equal: [circleci-project-setup, << pipeline.git.branch >>]
    jobs:
      - say-hello
      - say-bye:
          requires:
            - say-hello

